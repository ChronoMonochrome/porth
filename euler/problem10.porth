include "std.porth"

// TODO: this solution is too slow for simulation mode even with pypy

macro ans mem end
macro primes-count ans sizeof(u64) + end
macro primes primes-count sizeof(u32) + end

macro push-prime // value --
  primes-count @32 sizeof(u32) * primes + !32
  primes-count inc32
end

macro is-prime // [value: int] -> [ret: bool]
  0 while
    if 2dup sizeof(u32) * primes + @32 dup * >= do
      2dup sizeof(u32) * primes + @32 mod 0 !=
    else false end
  do 1 + end
  sizeof(u32) * primes + @32 dup * <
end

2 push-prime
2 ans !64

3 while dup 2000000 < do
  if dup is-prime do
    dup push-prime
    dup ans @64 + ans !64
  end
  1 +
end drop

ans @64 print
